/* eslint-disable @typescript-eslint/no-misused-promises */
import React from "react";
import { type NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
import Link from "next/link";

import { api } from "../utils/api";
import type { Playground } from "../server/lib/axios";
import Button from "../components/Button";
import {
  ReflexContainer,
  ReflexSplitter,
  ReflexElement,
  ReflexHandle,
} from "react-reflex";

const Devtools = dynamic(() => import("../components/Devtools"), {
  ssr: false,
});

const Home: NextPage = () => {
  // states
  const [loading, setLoading] = React.useState(false);
  // hooks
  const { mutateAsync } = api.spaces.create.useMutation();
  // handlers and callbacks
  const handleSpaceCreating = React.useCallback(async () => {
    setLoading(true);
    const result = (await mutateAsync()) as Playground;
    setLoading(false);
    window.open(result.instanceUrl, "_blank");
  }, [mutateAsync]);
  return (
    <>
      <Head>
        <title>coder cm</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen w-full">
        <ReflexContainer orientation="vertical" className="bg-black">
          <ReflexElement className="h-full w-full bg-[#F3F7F7]">
            <div className="pane-content">
              <div className="relative h-full w-full"></div>
            </div>
          </ReflexElement>
          <ReflexSplitter className="handle">
            <div className="flex h-full w-[10px] items-center justify-center border border-[#d7e1e2] bg-teal-700 bg-transparent hover:cursor-pointer hover:bg-[#B7C9CC]">
              <svg
                viewBox="0 0 6 30"
                width="1em"
                height="1em"
                className=" ui-svg-icon"
                fill="currentColor"
              >
                <path d="M0 0h2v2H0zm4 0h2v2H4zM0 4h2v2H0zm4 0h2v2H4zM0 8h2v2H0zm4 0h2v2H4zm-4 4h2v2H0zm4 0h2v2H4zm-4 4h2v2H0zm4 0h2v2H4zm-4 4h2v2H0zm4 0h2v2H4zm-4 4h2v2H0zm4 0h2v2H4zm-4 4h2v2H0zm4 0h2v2H4z"></path>
              </svg>
            </div>
          </ReflexSplitter>
          <ReflexElement className="h-full w-full bg-[#F3F7F7]">
            <div className="h-full w-full px-2">
              <iframe
                src="http://138.197.186.79/"
                width="100%"
                height="100%"
                title="Embedded Website"
              />
            </div>
          </ReflexElement>
        </ReflexContainer>
      </main>
    </>
  );
};

export default Home;
